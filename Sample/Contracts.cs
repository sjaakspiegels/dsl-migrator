using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Threading.Tasks;

// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable UnusedMember.Local
namespace Lokad
{
  #region Generated by Lokad Code DSL
  [DataContract(Namespace = "Lokad")]
  public partial class UniverseId : IIdentity
  {
    [DataMember(Order = 1)] public long Id { get; private set; }
    
    UniverseId () {}
    public UniverseId (long id)
    {
      Id = id;
    }
  }
  [DataContract(Namespace = "Lokad")]
  public partial class GalaxyId : IIdentity
  {
    [DataMember(Order = 1)] public long Id { get; private set; }
    
    GalaxyId () {}
    public GalaxyId (long id)
    {
      Id = id;
    }
  }
  [DataContract(Namespace = "Lokad")]
  public partial class Universe
  {
    [DataMember(Order = 1)] public UniverseId Id { get; private set; }
    [DataMember(Order = 2)] public string Name { get; private set; }
    
    Universe () {}
    public Universe (UniverseId id, string name)
    {
      Id = id;
      Name = name;
    }
  }
  [DataContract(Namespace = "Lokad")]
  public partial class Document
  {
    [DataMember(Order = 1)] public Guid Id { get; private set; }
    [DataMember(Order = 2)] public byte[] Inhoud { get; private set; }
    
    Document () 
    {
      Inhoud = new byte[0];
    }
    public Document (Guid id, byte[] inhoud)
    {
      Id = id;
      Inhoud = inhoud;
    }
  }
  [DataContract(Namespace = "Lokad")]
  public partial class CreateUniverse : IUniverseCommand
  {
    [DataMember(Order = 1)] public UniverseId Id { get; private set; }
    [DataMember(Order = 2)] public string Name { get; private set; }
    
    CreateUniverse () {}
    public CreateUniverse (UniverseId id, string name)
    {
      Id = id;
      Name = name;
    }
    
    public override string ToString()
    {
      return string.Format(@"Create universe - {0}", Name);
    }
  }
  [DataContract(Namespace = "Lokad")]
  public partial class UniverseCreated : IUniverseEvent<UniverseId>
  {
    [DataMember(Order = 1)] public UniverseId Id { get; private set; }
    [DataMember(Order = 2)] public string Name { get; private set; }
    
    UniverseCreated () {}
    public UniverseCreated (UniverseId id, string name)
    {
      Id = id;
      Name = name;
    }
    
    public override string ToString()
    {
      return string.Format(@"Universe {0} created", Name);
    }
  }
  [DataContract(Namespace = "Lokad")]
  public partial class DestroyUniverse : IUniverseCommand
  {
    [DataMember(Order = 1)] public UniverseId Id { get; private set; }
    [DataMember(Order = 2)] public string Reason { get; private set; }
    
    DestroyUniverse () {}
    public DestroyUniverse (UniverseId id, string reason)
    {
      Id = id;
      Reason = reason;
    }
    
    public override string ToString()
    {
      return string.Format(@"Destroy universe, reason - {0}", Reason);
    }
  }
  [DataContract(Namespace = "Lokad")]
  public partial class UniverseDestroyed : IUniverseEvent<UniverseId>
  {
    [DataMember(Order = 1)] public UniverseId Id { get; private set; }
    [DataMember(Order = 2)] public string Reason { get; private set; }
    
    UniverseDestroyed () {}
    public UniverseDestroyed (UniverseId id, string reason)
    {
      Id = id;
      Reason = reason;
    }
    
    public override string ToString()
    {
      return string.Format(@"Universe destroyed, reason - {0}", Reason);
    }
  }
  [DataContract(Namespace = "Lokad")]
  public partial class DestroyUniverseNow : IUniverseCommand
  {
    [DataMember(Order = 1)] public UniverseId Id { get; private set; }
    [DataMember(Order = 2)] public string Reason { get; private set; }
    
    DestroyUniverseNow () {}
    public DestroyUniverseNow (UniverseId id, string reason)
    {
      Id = id;
      Reason = reason;
    }
    
    public override string ToString()
    {
      return string.Format(@"Destroy universe, reason - {0}", Reason);
    }
  }
  [DataContract(Namespace = "Lokad")]
  public partial class AddGalaxy : IUniverseCommand
  {
    [DataMember(Order = 1)] public UniverseId Id { get; private set; }
    [DataMember(Order = 2)] public string Name { get; private set; }
    [DataMember(Order = 3)] public GalaxyType Type { get; private set; }
    
    AddGalaxy () {}
    public AddGalaxy (UniverseId id, string name, GalaxyType type)
    {
      Id = id;
      Name = name;
      Type = type;
    }
    
    public override string ToString()
    {
      return string.Format(@"Create {1} galaxy - {0}", Name, Type);
    }
  }
  [DataContract(Namespace = "Lokad")]
  public partial class GalaxyAdded : IUniverseEvent<UniverseId>
  {
    [DataMember(Order = 1)] public UniverseId Id { get; private set; }
    [DataMember(Order = 2)] public GalaxyId GalaxyId { get; private set; }
    [DataMember(Order = 3)] public string Name { get; private set; }
    [DataMember(Order = 4)] public GalaxyType Type { get; private set; }
    [DataMember(Order = 5)] public DateTime DateUtc { get; private set; }
    
    GalaxyAdded () {}
    public GalaxyAdded (UniverseId id, GalaxyId galaxyId, string name, GalaxyType type, DateTime dateUtc)
    {
      Id = id;
      GalaxyId = galaxyId;
      Name = name;
      Type = type;
      DateUtc = dateUtc;
    }
    
    public override string ToString()
    {
      return string.Format(@"[{2:yyyy.MM.dd HH:mm}] Galaxy {0} of type {1} added to universe.", Name, Type, DateUtc);
    }
  }
  [DataContract(Namespace = "Lokad")]
  public partial class WipeGalaxy : IUniverseCommand
  {
    [DataMember(Order = 1)] public UniverseId Id { get; private set; }
    [DataMember(Order = 2)] public GalaxyId GalaxyId { get; private set; }
    [DataMember(Order = 3)] public string Reason { get; private set; }
    
    WipeGalaxy () {}
    public WipeGalaxy (UniverseId id, GalaxyId galaxyId, string reason)
    {
      Id = id;
      GalaxyId = galaxyId;
      Reason = reason;
    }
    
    public override string ToString()
    {
      return string.Format(@"Wipe galaxy {0}, reason - {1}", GalaxyId, Reason);
    }
  }
  [DataContract(Namespace = "Lokad")]
  public partial class GalaxyWiped : IUniverseEvent<UniverseId>
  {
    [DataMember(Order = 1)] public UniverseId Id { get; private set; }
    [DataMember(Order = 2)] public GalaxyId GalaxyId { get; private set; }
    [DataMember(Order = 3)] public string Name { get; private set; }
    [DataMember(Order = 4)] public string Reason { get; private set; }
    [DataMember(Order = 5)] public DateTime DateUtc { get; private set; }
    
    GalaxyWiped () {}
    public GalaxyWiped (UniverseId id, GalaxyId galaxyId, string name, string reason, DateTime dateUtc)
    {
      Id = id;
      GalaxyId = galaxyId;
      Name = name;
      Reason = reason;
      DateUtc = dateUtc;
    }
    
    public override string ToString()
    {
      return string.Format(@"[{2:yyyy.MM.dd HH:mm}] Galaxy {0} wiped, reason - {1}", Name, Reason, DateUtc);
    }
  }
  [DataContract(Namespace = "Lokad")]
  public partial class PopulateGalaxy : IUniverseCommand
  {
    [DataMember(Order = 1)] public UniverseId Id { get; private set; }
    [DataMember(Order = 2)] public GalaxyId GalaxyId { get; private set; }
    [DataMember(Order = 3)] public string Reason { get; private set; }
    
    PopulateGalaxy () {}
    public PopulateGalaxy (UniverseId id, GalaxyId galaxyId, string reason)
    {
      Id = id;
      GalaxyId = galaxyId;
      Reason = reason;
    }
    
    public override string ToString()
    {
      return string.Format(@"Wipe galaxy {0}, reason - {1}", GalaxyId, Reason);
    }
  }
  [DataContract(Namespace = "Lokad")]
  public partial class GalaxyPopulated : IUniverseEvent<UniverseId>
  {
    [DataMember(Order = 1)] public UniverseId Id { get; private set; }
    [DataMember(Order = 2)] public GalaxyId GalaxyId { get; private set; }
    [DataMember(Order = 3)] public string Name { get; private set; }
    [DataMember(Order = 4)] public string Reason { get; private set; }
    [DataMember(Order = 5)] public DateTime DateUtc { get; private set; }
    
    GalaxyPopulated () {}
    public GalaxyPopulated (UniverseId id, GalaxyId galaxyId, string name, string reason, DateTime dateUtc)
    {
      Id = id;
      GalaxyId = galaxyId;
      Name = name;
      Reason = reason;
      DateUtc = dateUtc;
    }
    
    public override string ToString()
    {
      return string.Format(@"[{2:yyyy.MM.dd HH:mm}] Galaxy {0} wiped, reason - {1}", Name, Reason, DateUtc);
    }
  }
  
  public interface IUniverseApplicationService
  {
    void When(CreateUniverse c);
    void When(DestroyUniverse c);
    void When(DestroyUniverseNow c);
    void When(AddGalaxy c);
    void When(WipeGalaxy c);
    Task When(PopulateGalaxy c);
  }
  
  public interface IUniverseState
  {
    void When(UniverseCreated e);
    void When(UniverseDestroyed e);
    void When(GalaxyAdded e);
    void When(GalaxyWiped e);
    void When(GalaxyPopulated e);
  }
  #endregion
}
